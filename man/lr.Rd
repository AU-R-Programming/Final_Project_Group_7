% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/documentation.R
\name{lr}
\alias{lr}
\title{Logistic Regression with Bootstrapping and Evaluation Metrics}
\usage{
lr(formula = NULL, data = NULL, X = NULL, y = NULL, B = 20, alpha = 0.05)
}
\arguments{
\item{formula}{Optional. A formula object specifying the response and predictor variables.}

\item{data}{Optional. A data frame containing the data referenced in the formula.}

\item{X}{Optional. A matrix or data frame of predictor variables.}

\item{y}{Optional. A vector of binary response values (0 or 1).}

\item{B}{Integer. The number of bootstrap samples to generate. Default is 20.}

\item{alpha}{Numeric. The significance level for confidence interval estimation. Default is 0.05.}
}
\value{
A list containing:
\item{beta_init}{The initial coefficients estimated using the least squares approach.}
\item{beta_optimized}{The optimized coefficients obtained using maximum likelihood estimation.}
\item{CI}{A matrix containing the bootstrap confidence intervals for each coefficient.}
\item{confusion_matrix}{A 2x2 confusion matrix comparing actual vs. predicted values.}
\item{prevalence}{The prevalence (proportion of positive cases) in the response variable.}
\item{accuracy}{The accuracy of the model, defined as the proportion of correct predictions.}
\item{sensitivity}{The sensitivity (true positive rate) of the model.}
\item{specificity}{The specificity (true negative rate) of the model.}
\item{false_discovery_rate}{The false discovery rate of the model.}
\item{diagnostic_odds_ratio}{The diagnostic odds ratio, defined as (TP / FN) / (FP / TN).}
\item{factor_mappings}{A list of data frames mapping factor levels to numeric values for all categorical variables.}
}
\description{
This function fits a logistic regression model using either a formula and data frame or
user-provided independent and dependent variables (X and y). It also computes bootstrap
confidence intervals, evaluation metrics such as accuracy, sensitivity, specificity, and
diagnostic odds ratio.
}
\details{
The \code{lr} function performs logistic regression with an option to input the formula and data directly or
provide independent variables (X) and response variable (y) separately. If categorical variables are present
in the data, they are converted to dummy variables.

The function computes the logistic regression model using maximum likelihood estimation. It also generates
bootstrap samples to estimate confidence intervals for the model coefficients. Performance metrics, including
accuracy, sensitivity, specificity, false discovery rate, and diagnostic odds ratio, are calculated based on
the predictions.
}
\note{
The response variable (\code{y}) must have exactly two levels for logistic regression to be applicable.
All categorical variables are internally converted to numeric variables.
}
\examples{
# Example 1: using the mtcars dataset with 'am' as the binomial dependent variable.
# Split the data, using 75\% of the data for training, and return the train and test data sets.
data(mtcars)
data <- train_test_sampling(mtcars, "am", train_prop=0.75, return_data=TRUE, seed=123)
train<-data$train
result <- lr(formula = am ~ mpg + hp + wt, data = train)
print(result$beta_optimized)
print(result$confusion_matrix)

# Example 2: Using data set iris
data(iris)
# Create a binary dependent variable that includes only species 'setosa' and 'versicolor'
iris_binary <- iris[iris$Species \%in\% c("setosa", "versicolor"), ]
iris_binary$Species <- factor(iris_binary$Species)

# Fit the model
result <- lr(Species ~ Sepal.Length + Sepal.Width, data = iris_binary)
print(result$beta_optimized)

# Example 3: Using X and y directly
X <- iris_binary[, c("Sepal.Length", "Sepal.Width")]
y <- as.numeric(iris_binary$Species) - 1
result <- lr(X = X, y = y, B = 50, alpha = 0.01)
print(result$beta_optimized)

}
\seealso{
\code{\link[TrainPredict]{predict_new}}, \code{\link[TrainPredict]{predict_test}}, \code{\link[TrainPredict]{train_test_sampling}}
}
